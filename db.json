{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"src/images/components.png","path":"images/components.png","modified":1,"renderable":0},{"_id":"src/images/data.png","path":"images/data.png","modified":1,"renderable":0},{"_id":"src/images/mvvm.png","path":"images/mvvm.png","modified":1,"renderable":0},{"_id":"src/images/props-events.png","path":"images/props-events.png","modified":1,"renderable":0},{"_id":"src/images/state.png","path":"images/state.png","modified":1,"renderable":0},{"_id":"src/images/hn-architecture.png","path":"images/hn-architecture.png","modified":1,"renderable":0},{"_id":"src/images/hn.png","path":"images/hn.png","modified":1,"renderable":0},{"_id":"src/images/lifecycle.png","path":"images/lifecycle.png","modified":1,"renderable":0},{"_id":"src/images/vue-component.png","path":"images/vue-component.png","modified":1,"renderable":0},{"_id":"themes/vue/source/css/benchmark.styl","path":"css/benchmark.styl","modified":1,"renderable":1},{"_id":"themes/vue/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"themes/vue/source/css/page.styl","path":"css/page.styl","modified":1,"renderable":1},{"_id":"themes/vue/source/css/search.styl","path":"css/search.styl","modified":1,"renderable":1},{"_id":"themes/vue/source/images/2mhost.png","path":"images/2mhost.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/actualize.png","path":"images/actualize.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/chaitin.png","path":"images/chaitin.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/check.png","path":"images/check.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/down.png","path":"images/down.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/feed.png","path":"images/feed.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/icons.png","path":"images/icons.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/htmlburger.png","path":"images/htmlburger.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/itunescn.png","path":"images/itunescn.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/jsfiddle.png","path":"images/jsfiddle.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/laravel.png","path":"images/laravel.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/juejin.png","path":"images/juejin.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/logo.png","path":"images/logo.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/vue/source/images/menu.png","path":"images/menu.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/monterail.png","path":"images/monterail.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/patreon.png","path":"images/patreon.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/paypal.png","path":"images/paypal.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/search.png","path":"images/search.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/strikingly.png","path":"images/strikingly.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/someline.png","path":"images/someline.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/tde.png","path":"images/tde.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/transition.png","path":"images/transition.png","modified":1,"renderable":1},{"_id":"themes/vue/source/images/trisoft.png","path":"images/trisoft.png","modified":1,"renderable":1},{"_id":"themes/vue/source/js/smooth-scroll.min.js","path":"js/smooth-scroll.min.js","modified":1,"renderable":1},{"_id":"themes/vue/source/js/common.js","path":"js/common.js","modified":1,"renderable":1},{"_id":"themes/vue/source/images/vuejobs.png","path":"images/vuejobs.png","modified":1,"renderable":1},{"_id":"src/images/vue-component-with-preprocessors.png","path":"images/vue-component-with-preprocessors.png","modified":1,"renderable":0},{"_id":"themes/vue/source/js/vue.min.js","path":"js/vue.min.js","modified":1,"renderable":1},{"_id":"themes/vue/source/js/vue.js","path":"js/vue.js","modified":1,"renderable":1}],"Cache":[{"_id":"src/.DS_Store","hash":"b48c4f7d61a5928be717d4bd654481ff1eab36ee","modified":1478557352000},{"_id":"src/index.md","hash":"fd945de1e31344f0d8be59bcc87e3f5fda468e11","modified":1478519250000},{"_id":"themes/vue/_config.yml","hash":"70c81d659ef7951ce779693c358673364179466f","modified":1478557571000},{"_id":"src/_posts/.DS_Store","hash":"91a577317a3798f2757b472393b1522d646dc4be","modified":1478557375000},{"_id":"src/_posts/1.0.0-release.md","hash":"b950805d513f9bab95e81d02086a423ea84580d0","modified":1478557410000},{"_id":"src/docs/index.md","hash":"e70e657c484d48bd92b7d6e64205369d48f89b77","modified":1478648189000},{"_id":"src/images/components.png","hash":"d4ce2f1000b166e119ea6541c78b3e31106f1fe8","modified":1478519250000},{"_id":"src/images/data.png","hash":"9279fe7689eed01474d5abee0fc39ee5b003cc5a","modified":1478519250000},{"_id":"src/images/mvvm.png","hash":"52c8a6529e7ed652041a6d71f1824db3991ea574","modified":1478519250000},{"_id":"src/images/props-events.png","hash":"9e25599114cd5ec4696f24ab631d690beac34137","modified":1478519250000},{"_id":"src/images/state.png","hash":"cab62293b1c242683dc7752b8908844792e2252b","modified":1478519250000},{"_id":"themes/vue/layout/index.ejs","hash":"261375dc69ca3d3f8340cf6085bf24e13f0727bf","modified":1478648579000},{"_id":"themes/vue/layout/layout.ejs","hash":"8ecdb4859744e552180d7d58524cb15997a430ff","modified":1478701472000},{"_id":"themes/vue/layout/page.ejs","hash":"85c8b7f10a807d5d88468affaed331654a534ee3","modified":1478555665000},{"_id":"themes/vue/layout/post.ejs","hash":"aa03915a3540de78cfe8fe1c8f9e897974bf35a0","modified":1478519250000},{"_id":"themes/vue/source/.DS_Store","hash":"12084451e0694cf5b83aa85098630bc97bf234ea","modified":1478578611000},{"_id":"src/images/hn-architecture.png","hash":"f583a2c31083afbeb0f5edb93213426e7c6c41ba","modified":1478519250000},{"_id":"src/images/hn.png","hash":"9e1332008b342502aea641dbfb7d7911d7a03df1","modified":1478519250000},{"_id":"src/images/lifecycle.png","hash":"245ed3bc3f4a0e1698faf640863a1271a3e8ad35","modified":1478519250000},{"_id":"themes/vue/layout/partials/header.ejs","hash":"349218c217c361b187174d87f2a6891792d11618","modified":1478555397000},{"_id":"src/images/vue-component.png","hash":"c14948034d574d0cf1d24f848e4ad9f4f27271a0","modified":1478519250000},{"_id":"themes/vue/layout/partials/sidebar.ejs","hash":"4c3d649ff75d03b2d330722d50faf025d71e431c","modified":1478558374000},{"_id":"themes/vue/layout/partials/main_menu.ejs","hash":"0212467e84beda3d583d6226bd92841a8e67a4a3","modified":1478554956000},{"_id":"themes/vue/source/css/_common.styl","hash":"93e3737accca2a1b288d3989f3c71d5f4d522a09","modified":1478564210000},{"_id":"themes/vue/source/css/_demo.styl","hash":"495a6bd1418e4fed5e2bf4be08046f054a39b2cf","modified":1478519250000},{"_id":"themes/vue/source/css/_header.styl","hash":"d875c1bcc79884b039b9464492816305c2b8d1e9","modified":1478560012000},{"_id":"themes/vue/source/css/_migration.styl","hash":"5ea4f20818827c0d57a36a3006b736366c3b446f","modified":1478519250000},{"_id":"themes/vue/source/css/_settings.styl","hash":"83fbb3a60be937b744855d34c629a3cea2e69934","modified":1478560446000},{"_id":"themes/vue/source/css/_sidebar.styl","hash":"0782f66b585d4ad6c0dde7161522ce76ca8411d7","modified":1478560005000},{"_id":"themes/vue/source/css/_sponsor.styl","hash":"6a4e1503b1e4f0e98e1e008ba846036fee3199aa","modified":1478519250000},{"_id":"themes/vue/source/css/_syntax.styl","hash":"d8850d2b3c9f00add8ef698488ac756b8fa58c37","modified":1478561926000},{"_id":"themes/vue/source/css/benchmark.styl","hash":"95d4607b2b59623a673e131e1a267d0311fe89e6","modified":1478519250000},{"_id":"themes/vue/source/css/index.styl","hash":"b6255f772810e6baa7a5503d8cff57341a24ad46","modified":1478560003000},{"_id":"themes/vue/source/css/page.styl","hash":"548e551bb6588b69011abadcb0ec2cab55edc34d","modified":1478560002000},{"_id":"themes/vue/source/css/search.styl","hash":"8fd05aaed91c5ef31c8ca6d36743a029d0bc569f","modified":1478701037000},{"_id":"themes/vue/source/images/2mhost.png","hash":"a42a475ec7d2b36e82f420bd80a9957915dab2ce","modified":1478519250000},{"_id":"themes/vue/source/images/actualize.png","hash":"7b9c0fefb69cc4fad0520782f5445d495975bb57","modified":1478519250000},{"_id":"themes/vue/source/images/chaitin.png","hash":"0cca04b4c318b04be96ed066bc6ad3bb5f3788ec","modified":1478519250000},{"_id":"themes/vue/source/images/check.png","hash":"682cf89e1802afb1dfddf07a6aed828a45b824af","modified":1478519250000},{"_id":"themes/vue/source/images/down.png","hash":"42505e12d686cf580f793bd9193acbac1e3e3a91","modified":1478519250000},{"_id":"themes/vue/source/images/feed.png","hash":"0a746dab71dca2025f63584dbd222dc5e0707ba8","modified":1478519250000},{"_id":"themes/vue/source/images/icons.png","hash":"91225ef7011e59dbe6b4b9f2666133fb5e1bc976","modified":1478519250000},{"_id":"themes/vue/source/images/htmlburger.png","hash":"0005ef9559a88da3ff7b30b53e44acc5f1a14e46","modified":1478519250000},{"_id":"themes/vue/source/images/itunescn.png","hash":"75968c5e469bec3d061c9207ca872b2e57081015","modified":1478519250000},{"_id":"themes/vue/source/images/jsfiddle.png","hash":"0646dceea2a62d3f5d2aabff4bdecffdf54cc8a7","modified":1478519250000},{"_id":"themes/vue/source/images/laravel.png","hash":"d49fdacbae388601d2ff339b31aedd3c0dd3be3a","modified":1478519250000},{"_id":"themes/vue/source/images/juejin.png","hash":"a346d9068f1e4f65262fdc885c5fb362ea3f36b8","modified":1478519250000},{"_id":"themes/vue/source/images/logo.png","hash":"a4f6d18d8f4ad845a6babd54d413ed1203d71a55","modified":1478648548000},{"_id":"themes/vue/source/images/logo.svg","hash":"28c10e1f2fa8e09875e648173d35b0cc1ca32aee","modified":1478560221000},{"_id":"themes/vue/source/images/menu.png","hash":"bdaa35eb1ed119caeb934e15a05b9f4a5396d957","modified":1478519250000},{"_id":"themes/vue/source/images/monterail.png","hash":"17b3a1f12f5c40b7b94ce320cc2ec9a4df9bca5e","modified":1478519250000},{"_id":"themes/vue/source/images/patreon.png","hash":"c2455d5a6a59ff2b0ce5d698a74af7ed7226438c","modified":1478519250000},{"_id":"themes/vue/source/images/paypal.png","hash":"4db177273d209e621a99941d6457456a0950eb96","modified":1478519250000},{"_id":"themes/vue/source/images/search.png","hash":"12d664cc51b8d53c9214830bc9b92fb340526a7b","modified":1478519250000},{"_id":"themes/vue/source/images/strikingly.png","hash":"d16ea35e0693928823b99efafc139f1ea1d6cb90","modified":1478519250000},{"_id":"themes/vue/source/images/someline.png","hash":"81ee000201cb80b19c7d79cc116c688c34163d36","modified":1478519250000},{"_id":"themes/vue/source/images/tde.png","hash":"ffa3a10004c2510cabd23ba99bdcb5012aab3835","modified":1478519250000},{"_id":"themes/vue/source/images/transition.png","hash":"47b92628ea1263d651dab90093ff5682d2e54e68","modified":1478519250000},{"_id":"themes/vue/source/images/trisoft.png","hash":"c5689ce6833a3696406dc73bb50fa5b6b18b2dbe","modified":1478519250000},{"_id":"themes/vue/source/js/smooth-scroll.min.js","hash":"86d3196a003a5cdc673a4c6ebb75db3ceee1a1a7","modified":1478519250000},{"_id":"themes/vue/source/js/common.js","hash":"fa3c67df7268dc432f52e315b01b37a83c0454a2","modified":1478558428000},{"_id":"themes/vue/source/images/vuejobs.png","hash":"25aa2ef77fcb62051036171942f3575af2a12e9c","modified":1478519250000},{"_id":"src/images/vue-component-with-preprocessors.png","hash":"9dfddb18d5f34cbeadf6e94b4559f932dbc0f573","modified":1478519250000},{"_id":"themes/vue/source/js/vue.min.js","hash":"cb9b2c5b752e244b755b0e624a6b5533db609daa","modified":1478519250000},{"_id":"themes/vue/source/js/vue.js","hash":"e54ade87b0183c9c16bcdd390bfffe29515662c0","modified":1478519250000},{"_id":"public/api/index.html","hash":"c9f0675039fb57c59b92b18474eb4f9140732fe5","modified":1478701579078},{"_id":"public/guide/comparison.html","hash":"25850f1a4700c5305be71224f7a5cd3686e71e98","modified":1478701579101},{"_id":"public/guide/components.html","hash":"ac958e3d99e1b93df5fde31e95bb4ee2cb903af4","modified":1478701579102},{"_id":"public/guide/class-and-style.html","hash":"970d4f993423e3d86413d315fe8fab5bad5aae0b","modified":1478701579103},{"_id":"public/guide/computed.html","hash":"96e3f4afeda86496a9078df974419c0a1d37e1c1","modified":1478701579103},{"_id":"public/guide/conditional.html","hash":"c6311d6806399fcfeebb3d38db377000f0ba20bf","modified":1478701579103},{"_id":"public/guide/custom-directive.html","hash":"d44daebd462e74d838560b80855b20084f673f88","modified":1478701579103},{"_id":"public/guide/deployment.html","hash":"c5b31d7025c5749f3f49cc1eef8ef4643239aab8","modified":1478701579103},{"_id":"public/guide/events.html","hash":"8b247e0b17642e6f2d94b39a9c5a30ffce35654b","modified":1478701579103},{"_id":"public/guide/forms.html","hash":"5a11591db0b014ae607fa7926fcb039ab56b66fc","modified":1478701579103},{"_id":"public/guide/index.html","hash":"e2b3d8b93afe5e766d9131ed574e0540d935b641","modified":1478701579103},{"_id":"public/guide/installation.html","hash":"1b0ef502e9b94e6e600eecbd198a73ba7e22d6af","modified":1478701579103},{"_id":"public/guide/instance.html","hash":"5edcf2972c13eee9e5deaf4936bc26268e834a25","modified":1478701579103},{"_id":"public/guide/join.html","hash":"f31da6e98e785258938fed5b13b02b776a8f0098","modified":1478701579103},{"_id":"public/guide/list.html","hash":"5c42ddd4f0c24c277cbb01be24404690d09a8a9b","modified":1478701579103},{"_id":"public/guide/migration-vue-router.html","hash":"146720fedd3855128fe39e8d9855c7cead9dc14d","modified":1478701579103},{"_id":"public/guide/migration-vuex.html","hash":"98193c186c31c9f82e4ef9d15eda478d6334d168","modified":1478701579103},{"_id":"public/guide/migration.html","hash":"02d5dd7fb011b540ac6b2ebd54c6aeb1a68a4327","modified":1478701579104},{"_id":"public/guide/mixins.html","hash":"4cbab0c07672782b6d42678ffec17873fcd0eb45","modified":1478701579105},{"_id":"public/guide/plugins.html","hash":"ef61f5d30721719cadd935718871b757465435eb","modified":1478701579105},{"_id":"public/guide/reactivity.html","hash":"6416a919fa2cea085484a090f7e05a2b44c2bab6","modified":1478701579105},{"_id":"public/guide/render-function.html","hash":"a29c7cba96378e3c8521eed1950fa32a6f77a189","modified":1478701579105},{"_id":"public/guide/routing.html","hash":"8945e59bf128ec03dd5040407c017f5596ed796d","modified":1478701579105},{"_id":"public/guide/single-file-components.html","hash":"f948a1559acb573f62b2593d5c60968978ed3161","modified":1478701579106},{"_id":"public/guide/ssr.html","hash":"efc8457a72454695edba3386e71653eb19bee86c","modified":1478701579106},{"_id":"public/guide/state-management.html","hash":"f7712e9d5875a243badc5f5a2425b104b0bb626e","modified":1478701579106},{"_id":"public/guide/syntax.html","hash":"75e4af69b22c8ec64b8c391f1b94dd64d5163aad","modified":1478701579106},{"_id":"public/guide/transitioning-state.html","hash":"1f5cabe1606bfdd3aa999cc2982d93f46e319c1b","modified":1478701579106},{"_id":"public/guide/transitions.html","hash":"ead910e781daf4430d4ac1c52570e194543ca015","modified":1478701579106},{"_id":"public/guide/unit-testing.html","hash":"9747699833d0356a5917ae4cc0068833847da2dd","modified":1478701579106},{"_id":"public/examples/commits.html","hash":"d7448d159ad4dad3eb4c3f63cb5971330e62e82d","modified":1478701579106},{"_id":"public/examples/elastic-header.html","hash":"6b445fee8ad128496b592e928ef297eeb7be1ec4","modified":1478701579106},{"_id":"public/examples/firebase.html","hash":"f00b36c0efc07818424eaecbb296e82dcc426ce0","modified":1478701579106},{"_id":"public/examples/grid-component.html","hash":"c2b990091a2977fc8446a19b438cbbe76d9bc5d0","modified":1478701579106},{"_id":"public/examples/hackernews.html","hash":"a51131e06269681c38cb1cbdfa359339f53143cc","modified":1478701579107},{"_id":"public/examples/index.html","hash":"a6ffd730fde22ef518953b62e12f79a3472c958c","modified":1478701579107},{"_id":"public/examples/modal.html","hash":"d5474beb09b1399f7aba07d04d335ccca1a6d1f6","modified":1478701579107},{"_id":"public/examples/select2.html","hash":"d3d6ae69df79ea8025a1893b11169a4c6a933631","modified":1478701579107},{"_id":"public/examples/svg.html","hash":"5b1fa13f3f832fe334c06175cca67c227152385b","modified":1478701579107},{"_id":"public/examples/todomvc.html","hash":"fb57cee2468f6c9c5424069f3923e2138ddb7b31","modified":1478701579107},{"_id":"public/examples/tree-view.html","hash":"0c09ebb15415a6bc3fcc3749bbe5fd9229110de4","modified":1478701579107},{"_id":"public/atom.xml","hash":"60f04b4c30e2cb00168f3c88ad3acec5f19b83f5","modified":1478701579107},{"_id":"public/index.html","hash":"bb80e2cc8de53f73260546b66491099c8c429bfb","modified":1478701579116},{"_id":"public/archives/index.html","hash":"23d0f95361f83850117146c1500063a136ea00a5","modified":1478701579116},{"_id":"public/archives/2015/index.html","hash":"23d0f95361f83850117146c1500063a136ea00a5","modified":1478701579116},{"_id":"public/2015/10/26/1.0.0-release/index.html","hash":"a297716bd23da993c55667bec95fa85a8fde89e8","modified":1478701579116},{"_id":"public/archives/2015/10/index.html","hash":"23d0f95361f83850117146c1500063a136ea00a5","modified":1478701579116},{"_id":"public/docs/index.html","hash":"e5412e31da7f9f706ae5ae82835c3fdbbd78e94c","modified":1478701579116},{"_id":"public/images/components.png","hash":"d4ce2f1000b166e119ea6541c78b3e31106f1fe8","modified":1478701579120},{"_id":"public/images/data.png","hash":"9279fe7689eed01474d5abee0fc39ee5b003cc5a","modified":1478701579120},{"_id":"public/images/mvvm.png","hash":"52c8a6529e7ed652041a6d71f1824db3991ea574","modified":1478701579121},{"_id":"public/images/props-events.png","hash":"9e25599114cd5ec4696f24ab631d690beac34137","modified":1478701579121},{"_id":"public/images/state.png","hash":"cab62293b1c242683dc7752b8908844792e2252b","modified":1478701579121},{"_id":"public/images/2mhost.png","hash":"a42a475ec7d2b36e82f420bd80a9957915dab2ce","modified":1478701579121},{"_id":"public/images/actualize.png","hash":"7b9c0fefb69cc4fad0520782f5445d495975bb57","modified":1478701579121},{"_id":"public/images/chaitin.png","hash":"0cca04b4c318b04be96ed066bc6ad3bb5f3788ec","modified":1478701579121},{"_id":"public/images/down.png","hash":"42505e12d686cf580f793bd9193acbac1e3e3a91","modified":1478701579121},{"_id":"public/images/check.png","hash":"682cf89e1802afb1dfddf07a6aed828a45b824af","modified":1478701579121},{"_id":"public/images/feed.png","hash":"0a746dab71dca2025f63584dbd222dc5e0707ba8","modified":1478701579121},{"_id":"public/images/icons.png","hash":"91225ef7011e59dbe6b4b9f2666133fb5e1bc976","modified":1478701579122},{"_id":"public/images/htmlburger.png","hash":"0005ef9559a88da3ff7b30b53e44acc5f1a14e46","modified":1478701579122},{"_id":"public/images/itunescn.png","hash":"75968c5e469bec3d061c9207ca872b2e57081015","modified":1478701579122},{"_id":"public/images/jsfiddle.png","hash":"0646dceea2a62d3f5d2aabff4bdecffdf54cc8a7","modified":1478701579122},{"_id":"public/images/laravel.png","hash":"d49fdacbae388601d2ff339b31aedd3c0dd3be3a","modified":1478701579122},{"_id":"public/images/juejin.png","hash":"a346d9068f1e4f65262fdc885c5fb362ea3f36b8","modified":1478701579122},{"_id":"public/images/logo.png","hash":"a4f6d18d8f4ad845a6babd54d413ed1203d71a55","modified":1478701579122},{"_id":"public/images/logo.svg","hash":"28c10e1f2fa8e09875e648173d35b0cc1ca32aee","modified":1478701579122},{"_id":"public/images/menu.png","hash":"bdaa35eb1ed119caeb934e15a05b9f4a5396d957","modified":1478701579122},{"_id":"public/images/monterail.png","hash":"17b3a1f12f5c40b7b94ce320cc2ec9a4df9bca5e","modified":1478701579122},{"_id":"public/images/patreon.png","hash":"c2455d5a6a59ff2b0ce5d698a74af7ed7226438c","modified":1478701579122},{"_id":"public/images/paypal.png","hash":"4db177273d209e621a99941d6457456a0950eb96","modified":1478701579122},{"_id":"public/images/search.png","hash":"12d664cc51b8d53c9214830bc9b92fb340526a7b","modified":1478701579122},{"_id":"public/images/strikingly.png","hash":"d16ea35e0693928823b99efafc139f1ea1d6cb90","modified":1478701579122},{"_id":"public/images/someline.png","hash":"81ee000201cb80b19c7d79cc116c688c34163d36","modified":1478701579122},{"_id":"public/images/tde.png","hash":"ffa3a10004c2510cabd23ba99bdcb5012aab3835","modified":1478701579123},{"_id":"public/images/transition.png","hash":"47b92628ea1263d651dab90093ff5682d2e54e68","modified":1478701579123},{"_id":"public/images/trisoft.png","hash":"c5689ce6833a3696406dc73bb50fa5b6b18b2dbe","modified":1478701579123},{"_id":"public/images/vuejobs.png","hash":"25aa2ef77fcb62051036171942f3575af2a12e9c","modified":1478701579123},{"_id":"public/css/index.css","hash":"95dcf96b21bac34ffcfb451fafc643735e6f688c","modified":1478701579523},{"_id":"public/css/benchmark.css","hash":"3424ee8c27052da2ab9f544027f49e1550385e9d","modified":1478701579523},{"_id":"public/css/search.css","hash":"386eaa2b90df7bf526a34191d3620376dc46845c","modified":1478701579523},{"_id":"public/css/page.css","hash":"f87e84fca9be68918fe0f3e82f27a991bea4636d","modified":1478701579523},{"_id":"public/js/smooth-scroll.min.js","hash":"86d3196a003a5cdc673a4c6ebb75db3ceee1a1a7","modified":1478701579523},{"_id":"public/js/common.js","hash":"fa3c67df7268dc432f52e315b01b37a83c0454a2","modified":1478701579524},{"_id":"public/js/vue.min.js","hash":"cb9b2c5b752e244b755b0e624a6b5533db609daa","modified":1478701579524},{"_id":"public/js/vue.js","hash":"e54ade87b0183c9c16bcdd390bfffe29515662c0","modified":1478701579524},{"_id":"public/images/hn-architecture.png","hash":"f583a2c31083afbeb0f5edb93213426e7c6c41ba","modified":1478701579524},{"_id":"public/images/hn.png","hash":"9e1332008b342502aea641dbfb7d7911d7a03df1","modified":1478701579524},{"_id":"public/images/lifecycle.png","hash":"245ed3bc3f4a0e1698faf640863a1271a3e8ad35","modified":1478701579525},{"_id":"public/images/vue-component.png","hash":"c14948034d574d0cf1d24f848e4ad9f4f27271a0","modified":1478701579525},{"_id":"public/images/vue-component-with-preprocessors.png","hash":"9dfddb18d5f34cbeadf6e94b4559f932dbc0f573","modified":1478701579530}],"Category":[],"Data":[],"Page":[{"index":true,"_content":"","source":"index.md","raw":"index: true\n---\n","date":"2016-11-07T20:41:56.000Z","updated":"2016-11-07T11:47:30.000Z","path":"index.html","title":"","comments":1,"layout":"page","_id":"civb0qogu0000arm1mvungrn7","content":"","excerpt":"","more":""},{"type":"docs","_content":"\n## Introduction\n\n**Zman** is a PHP package that makes Jewish date conversions simple and easy.\n\nThe `Zman` class is inherited from the amazing [briannesbitt/Carbon](https://github.com/briannesbitt/Carbon) which in turn inherits from PHP's [DateTime](http://www.php.net/manual/en/class.datetime.php) class, thus giving us access to some pretty nifty methods.\n\n## Getting Started\n\nThis is pre-release, so it is not available yet for installation. Check back soon iy\"H.\n\n## Instantiation\n\nThere are four different ways to create a new instance of `Zman`.\n\n``` PHP\n$zman = new Zman('first day of November 2016');\n$zman = new Zman('November 3, 2016');\n\n$zman = Zman::parse('first day of November 2016');\n$zman = Zman::parse('November 3, 2016');\n\n$zman = Zman::createFromDate(1967, 10, 6);\n\n$zman = Zman::now();\n```\n\n## Getters\n\nThe following getters are implemented via PHP's <em>`__get()`</em> method. This enables access to the value as if it was a property rather than a function call.\n\n```PHP\n$zman = Carbon::parse('2012-9-5 23:26:11.123789');\n\nvar_dump($zman->month);                           // int(13)\nvar_dump($zman->day);                             // int(18)\nvar_dump($zman->year);                            // int(5772)\n\n// inherited from Carbon\\Carbon\nvar_dump($zman->hour);                            // int(23)\nvar_dump($zman->minute);                          // int(26)\nvar_dump($zman->second);                          // int(11)\nvar_dump($zman->micro);                           // int(123789)\nvar_dump($zman->dayOfWeek);                       // int(3)\nvar_dump($zman->dayOfYear);                       // int(248)\nvar_dump($zman->weekOfMonth);                     // int(1)\nvar_dump($zman->weekOfYear);                      // int(36)\nvar_dump($zman->daysInMonth);                     // int(30)\nvar_dump($zman->timestamp);                       // int(1346901971)\nvar_dump($zman->age);                             // int(4) calculated vs now in the same tz\nvar_dump($zman->quarter);                         // int(3)\n```\n\n<p class=\"tip\">Note that only the `month`, `day`, and `year` getters will return the converted Jewish date. The other getters directly inherit from `Carbon\\Carbon` and reflect the Gregorian date.</p>\n\n## Setters\n\nThe following setters are implemented via PHP's <em>`__set()`</em> method. No validation is performed whatsoever so only use these methods if you're sure you know what you're doing.\n\n``` PHP\n// day\n$zman = Zman::parse('November 7, 2016');\nvar_dump($zman->day);                             // int(6)\n\n$zman->day = 10;\nvar_dump($zman->day);                             // int(10)\n\n$zman->day(14);\nvar_dump($zman->day);                             // int(14)\n\n// month\n$zman = Zman::parse('November 7, 2016');\nvar_dump($zman->month);                           // int(2)\n\n$zman->month = 4;\nvar_dump($zman->month);                           // int(4)\n\n$zman->month(6);\nvar_dump($zman->month);                           // int(6)\n\n// year\n$zman = Zman::parse('November 7, 2016');\nvar_dump($zman->year);                            // int(5777)\n\n$zman->year = 5000;\nvar_dump($zman->year);                            // int(5000)\n\n$zman->year(5050);\nvar_dump($zman->year);                            // int(5050)\n\n// etc.\n```\n\n<p class=\"tip\">Note that only the `month`, `day`, and `year` setters will affect the converted Jewish date. The other setters directly inherit from `Carbon\\Carbon` and reflect the Gregorian date.</p>\n\n## String Formats\n\n## Parshas HaShavua (Coming Soon)\n\nComing Soon!\n\n## Moadim\n\nThere are convenience methods both for finding the Gregorian date of any holiday for a given year, as well as checking if a specific Gregorian date is any of the holidays.\n\n### Holidays\n\n``` PHP\nZman::firstDayOfRoshHashana('5777')->toFormattedDateString(); // Oct 3, 2016\nZman::parse('October 3, 2016')->isRoshHashana();              // true\n\nZman::dayOfYomKippur('5777')->toFormattedDateString();        // Oct 12, 2016\nZman::parse('Oct 12, 2016')->isYomKippur();                   // true\n\nZman::firstDayOfSukkos('5777')->toFormattedDateString();      // Oct 17, 2016\nZman::parse('Oct 17, 2016')->isSukkos();                      // true\n\nZman::dayOfShminiAtzeres('5777')->toFormattedDateString();    // Oct 24, 2016\nZman::parse('Oct 24, 2016')->isShminiAtzeres();               // true\n\nZman::dayOfSimchasTorah('5777')->toFormattedDateString();     // Oct 25, 2016\nZman::parse('Oct 25, 2016')->isSimchasTorah();                // true\n\nZman::firstDayOfChanuka('5777')->toFormattedDateString();     // Dec 25, 2016\nZman::parse('Dec 25, 2016')->isChanuka();                     // true\n\nZman::dayOfTuBishvat('5777')->toFormattedDateString();        // Feb 11, 2017\nZman::parse('Feb 11, 2017')->isTuBishvat();                   // true\n\nZman::dayOfPurim('5777')->toFormattedDateString();            // Mar 12, 2017\nZman::parse('Mar 12, 2017')->isPurim();                       // true\n\nZman::dayOfShushanPurim('5777')->toFormattedDateString();     // Mar 13, 2017\nZman::parse('March 13, 2017')->isShushanPurim();              // true\n\nZman::dayOfPurimKattan('5779')->toFormattedDateString();      // Feb 19, 2019\nZman::parse('Feb 19, 2019')->isPurimKattan();                 // true\n\nZman::firstDayOfPesach('5777')->toFormattedDateString();      // Apr 11, 2017\nZman::parse('Apr 11, 2017')->isPesach();                      // true\n\nZman::dayOfPesachSheni('5777')->toFormattedDateString();      // May 10, 2017\nZman::parse('May 10, 2017')->isPesachSheni();                 // true\n\nZman::firstDayOfShavuos('5777')->toFormattedDateString();     // May 31, 2017\nZman::parse('May 31, 2017')->isShavuos();                     // true\n```\nLeap years are taken care of so you don't need to worry about it.\n\n<p class=\"tip\">Outside of <em>Eretz Yisroel</em> is the default setting. To find the value specific to Israel pass `false` as the second parameter. (e.g. `Zman::dayOfSimchasTorah('5777', false)`)</p>\n\n### Yuntif\n\n``` PHP\nZman::parse('April 11, 2017')->isPesachYuntif();      // true  - Pesach\nZman::parse('April 13, 2017')->isPesachYuntif();      // false - Chol HaMoed\nZman::parse('April 17, 2017')->isPesachYuntif();      // true  - Pesach\nZman::parse('May 31, 2017')->isYuntif();              // true  - Shavuos\nZman::parse('October 17, 2016')->isSukkosYuntif();    // true  - Sukkos\nZman::parse('October 20, 2016')->isSukkosYuntif();    // false - Chol HaMoed\nZman::parse('October 3, 2016')->isYuntif();           // true  - Rosh Hashana\nZman::parse('December 17, 2017')->isYuntif();         // false - Chanuka\n\n// etc.\n```\n\n### Chol Hamoed\n\n``` PHP\nZman::parse('April 13, 2017')->isCholHamoedPesach();    // true\nZman::parse('October 19, 2016')->isCholHamoedSukkos();  // true\nZman::parse('April 13, 2017')->isCholHamoed();          // true\n```\n\n### Rosh Chodesh\n``` PHP\nZman::parse('November 1, 2016')->isRoshChodesh();       // true\nZman::parse('November 2, 2016')->isRoshChodesh();       // true\nZman::parse('November 3, 2016')->isRoshChodesh();       // false\n```\n\n### Fast Days\n``` PHP\nZman::parse('October 12, 2016')->isYomKippur();         // true\nZman::parse('October 5, 2016')->isTzomGedaliah();       // true\nZman::parse('January 8, 2017')->isAsaraBiteives();      // true\nZman::parse('February 28, 2018')->isTaanisEsther();     // true\nZman::parse('July 11, 2017')->isShivaAsarBitamuz();     // true\nZman::parse('August 1, 2017')->isTishaBav();            // true\nZman::parse('October 5, 2016')->isFastDay());           // true\n```\n\n### Aseres Yimei Teshuva\n``` PHP\nZman::parse('September 21, 2017')->isAseresYimeiTeshuva(); // true\nZman::parse('September 22, 2017')->isAseresYimeiTeshuva(); // true\nZman::parse('September 23, 2017')->isAseresYimeiTeshuva(); // true\nZman::parse('September 24, 2017')->isAseresYimeiTeshuva(); // true\nZman::parse('September 25, 2017')->isAseresYimeiTeshuva(); // true\nZman::parse('September 26, 2017')->isAseresYimeiTeshuva(); // true\nZman::parse('September 27, 2017')->isAseresYimeiTeshuva(); // true\nZman::parse('September 28, 2017')->isAseresYimeiTeshuva(); // true\nZman::parse('September 29, 2017')->isAseresYimeiTeshuva(); // true\nZman::parse('September 30, 2017')->isAseresYimeiTeshuva(); // true\n\nZman::parse('October 23, 2017')->isAseresYimeiTeshuva();   // false\n```\n\n## Davening\n\nA few handy boolean checks have been implemented to check for special additions to <em>davening</em>.\n\n### Leining\n\n``` PHP\nZman::parse('November 7, 2016')->hasLeining();    // true - Monday\nZman::parse('November 10, 2016')->hasLeining();   // true - Thursday\nZman::parse('November 12, 2016')->hasLeining();   // true - Shabbos\nZman::parse('November 1, 2016')->hasLeining();    // true - Rosh Chodesh\nZman::parse('January 8, 2017')->hasLeining();     // true - Fast Day\nZman::parse('April 11, 2017')->hasLeining();      // true - Yuntif\nZman::parse('April 14, 2017')->hasLeining();      // true - Chol HaMoed\nZman::parse('December 27, 2016')->hasLeining();   // true - Chanuka\nZman::parse('March 12, 2017')->hasLeining();      // true - Purim\n\nZman::parse('November 6, 2016')->hasLeining();    // false - Average day\n```\n\n### Hallel\n\n``` PHP\nZman::parse('April 18, 2017')->hasHallel();       // true - Pesach\nZman::parse('June 1, 2017')->hasHallel();         // true - Shavuos\nZman::parse('October 23, 2016')->hasHallel();     // true - Sukkos\nZman::parse('October 24, 2016')->hasHallel();     // true - Shmini Atzeres\nZman::parse('October 25, 2016')->hasHallel();     // true - Simchas Torah\nZman::parse('January 1, 2017')->hasHallel();      // true - Chanuka\nZman::parse('November 1, 2016')->hasHallel();     // true - Rosh Chodesh\n\nZman::parse('March 12, 2017')->hasHallel();       // false - Purim\n```\n\n### Mussaf\n\n``` PHP\nZman::parse('November 1, 2016')->hasMussaf();    // true - Rosh Chodesh\nZman::parse('April 11, 2017')->hasMussaf();      // true - Yuntif\nZman::parse('April 13, 2017')->hasMussaf();      // true - Chol HaMoed\n\nZman::parse('December 20, 2017')->hasMussaf();   // false - Chanuka\n```\n\n### Slichos\n\nBesides for checking if a given day has <em>slichos</em>, the first day of <em>slichos</em> for both <em>ashkenazim</em> and <em>sfardim</em> before the <em>Yomim Noraim</em> is available via a helper method.\n\n``` PHP\nZman::firstDayOfSfardiSlichos('5776')->toFormattedDateString();     // Sep 4, 2016\nZman::firstDayOfAshkenaziSlichos('5776')->toFormattedDateString();  // Sep 25, 2016\n\nZman::firstDayOfSlichos('5777', true)->toFormattedDateString();     // Sep 4, 2016\nZman::firstDayOfSlichos('5777', false)->toFormattedDateString();    // Sep 25, 2016\n\nZman::parse('September 17, 2017')->hasSlichos();                    // true\nZman::parse('September 11, 2017')->hasSlichos(true);                // true\nZman::parse('September 11, 2017')->hasSlichos();                    // false\nZman::parse('December 11, 2017')->hasSlichos();                     // false\n```\n\n<p class=\"tip\">The default value for <em>slichos</em> is <em>ashkenazi</em>. To check for <em>sfardi</em> values pass `true` as a parameter.</p>\n\n## Zmanim (Coming Soon)\n\nComing Soon!\n","source":"docs/index.md","raw":"---\ntype: docs\n---\n\n## Introduction\n\n**Zman** is a PHP package that makes Jewish date conversions simple and easy.\n\nThe `Zman` class is inherited from the amazing [briannesbitt/Carbon](https://github.com/briannesbitt/Carbon) which in turn inherits from PHP's [DateTime](http://www.php.net/manual/en/class.datetime.php) class, thus giving us access to some pretty nifty methods.\n\n## Getting Started\n\nThis is pre-release, so it is not available yet for installation. Check back soon iy\"H.\n\n## Instantiation\n\nThere are four different ways to create a new instance of `Zman`.\n\n``` PHP\n$zman = new Zman('first day of November 2016');\n$zman = new Zman('November 3, 2016');\n\n$zman = Zman::parse('first day of November 2016');\n$zman = Zman::parse('November 3, 2016');\n\n$zman = Zman::createFromDate(1967, 10, 6);\n\n$zman = Zman::now();\n```\n\n## Getters\n\nThe following getters are implemented via PHP's <em>`__get()`</em> method. This enables access to the value as if it was a property rather than a function call.\n\n```PHP\n$zman = Carbon::parse('2012-9-5 23:26:11.123789');\n\nvar_dump($zman->month);                           // int(13)\nvar_dump($zman->day);                             // int(18)\nvar_dump($zman->year);                            // int(5772)\n\n// inherited from Carbon\\Carbon\nvar_dump($zman->hour);                            // int(23)\nvar_dump($zman->minute);                          // int(26)\nvar_dump($zman->second);                          // int(11)\nvar_dump($zman->micro);                           // int(123789)\nvar_dump($zman->dayOfWeek);                       // int(3)\nvar_dump($zman->dayOfYear);                       // int(248)\nvar_dump($zman->weekOfMonth);                     // int(1)\nvar_dump($zman->weekOfYear);                      // int(36)\nvar_dump($zman->daysInMonth);                     // int(30)\nvar_dump($zman->timestamp);                       // int(1346901971)\nvar_dump($zman->age);                             // int(4) calculated vs now in the same tz\nvar_dump($zman->quarter);                         // int(3)\n```\n\n<p class=\"tip\">Note that only the `month`, `day`, and `year` getters will return the converted Jewish date. The other getters directly inherit from `Carbon\\Carbon` and reflect the Gregorian date.</p>\n\n## Setters\n\nThe following setters are implemented via PHP's <em>`__set()`</em> method. No validation is performed whatsoever so only use these methods if you're sure you know what you're doing.\n\n``` PHP\n// day\n$zman = Zman::parse('November 7, 2016');\nvar_dump($zman->day);                             // int(6)\n\n$zman->day = 10;\nvar_dump($zman->day);                             // int(10)\n\n$zman->day(14);\nvar_dump($zman->day);                             // int(14)\n\n// month\n$zman = Zman::parse('November 7, 2016');\nvar_dump($zman->month);                           // int(2)\n\n$zman->month = 4;\nvar_dump($zman->month);                           // int(4)\n\n$zman->month(6);\nvar_dump($zman->month);                           // int(6)\n\n// year\n$zman = Zman::parse('November 7, 2016');\nvar_dump($zman->year);                            // int(5777)\n\n$zman->year = 5000;\nvar_dump($zman->year);                            // int(5000)\n\n$zman->year(5050);\nvar_dump($zman->year);                            // int(5050)\n\n// etc.\n```\n\n<p class=\"tip\">Note that only the `month`, `day`, and `year` setters will affect the converted Jewish date. The other setters directly inherit from `Carbon\\Carbon` and reflect the Gregorian date.</p>\n\n## String Formats\n\n## Parshas HaShavua (Coming Soon)\n\nComing Soon!\n\n## Moadim\n\nThere are convenience methods both for finding the Gregorian date of any holiday for a given year, as well as checking if a specific Gregorian date is any of the holidays.\n\n### Holidays\n\n``` PHP\nZman::firstDayOfRoshHashana('5777')->toFormattedDateString(); // Oct 3, 2016\nZman::parse('October 3, 2016')->isRoshHashana();              // true\n\nZman::dayOfYomKippur('5777')->toFormattedDateString();        // Oct 12, 2016\nZman::parse('Oct 12, 2016')->isYomKippur();                   // true\n\nZman::firstDayOfSukkos('5777')->toFormattedDateString();      // Oct 17, 2016\nZman::parse('Oct 17, 2016')->isSukkos();                      // true\n\nZman::dayOfShminiAtzeres('5777')->toFormattedDateString();    // Oct 24, 2016\nZman::parse('Oct 24, 2016')->isShminiAtzeres();               // true\n\nZman::dayOfSimchasTorah('5777')->toFormattedDateString();     // Oct 25, 2016\nZman::parse('Oct 25, 2016')->isSimchasTorah();                // true\n\nZman::firstDayOfChanuka('5777')->toFormattedDateString();     // Dec 25, 2016\nZman::parse('Dec 25, 2016')->isChanuka();                     // true\n\nZman::dayOfTuBishvat('5777')->toFormattedDateString();        // Feb 11, 2017\nZman::parse('Feb 11, 2017')->isTuBishvat();                   // true\n\nZman::dayOfPurim('5777')->toFormattedDateString();            // Mar 12, 2017\nZman::parse('Mar 12, 2017')->isPurim();                       // true\n\nZman::dayOfShushanPurim('5777')->toFormattedDateString();     // Mar 13, 2017\nZman::parse('March 13, 2017')->isShushanPurim();              // true\n\nZman::dayOfPurimKattan('5779')->toFormattedDateString();      // Feb 19, 2019\nZman::parse('Feb 19, 2019')->isPurimKattan();                 // true\n\nZman::firstDayOfPesach('5777')->toFormattedDateString();      // Apr 11, 2017\nZman::parse('Apr 11, 2017')->isPesach();                      // true\n\nZman::dayOfPesachSheni('5777')->toFormattedDateString();      // May 10, 2017\nZman::parse('May 10, 2017')->isPesachSheni();                 // true\n\nZman::firstDayOfShavuos('5777')->toFormattedDateString();     // May 31, 2017\nZman::parse('May 31, 2017')->isShavuos();                     // true\n```\nLeap years are taken care of so you don't need to worry about it.\n\n<p class=\"tip\">Outside of <em>Eretz Yisroel</em> is the default setting. To find the value specific to Israel pass `false` as the second parameter. (e.g. `Zman::dayOfSimchasTorah('5777', false)`)</p>\n\n### Yuntif\n\n``` PHP\nZman::parse('April 11, 2017')->isPesachYuntif();      // true  - Pesach\nZman::parse('April 13, 2017')->isPesachYuntif();      // false - Chol HaMoed\nZman::parse('April 17, 2017')->isPesachYuntif();      // true  - Pesach\nZman::parse('May 31, 2017')->isYuntif();              // true  - Shavuos\nZman::parse('October 17, 2016')->isSukkosYuntif();    // true  - Sukkos\nZman::parse('October 20, 2016')->isSukkosYuntif();    // false - Chol HaMoed\nZman::parse('October 3, 2016')->isYuntif();           // true  - Rosh Hashana\nZman::parse('December 17, 2017')->isYuntif();         // false - Chanuka\n\n// etc.\n```\n\n### Chol Hamoed\n\n``` PHP\nZman::parse('April 13, 2017')->isCholHamoedPesach();    // true\nZman::parse('October 19, 2016')->isCholHamoedSukkos();  // true\nZman::parse('April 13, 2017')->isCholHamoed();          // true\n```\n\n### Rosh Chodesh\n``` PHP\nZman::parse('November 1, 2016')->isRoshChodesh();       // true\nZman::parse('November 2, 2016')->isRoshChodesh();       // true\nZman::parse('November 3, 2016')->isRoshChodesh();       // false\n```\n\n### Fast Days\n``` PHP\nZman::parse('October 12, 2016')->isYomKippur();         // true\nZman::parse('October 5, 2016')->isTzomGedaliah();       // true\nZman::parse('January 8, 2017')->isAsaraBiteives();      // true\nZman::parse('February 28, 2018')->isTaanisEsther();     // true\nZman::parse('July 11, 2017')->isShivaAsarBitamuz();     // true\nZman::parse('August 1, 2017')->isTishaBav();            // true\nZman::parse('October 5, 2016')->isFastDay());           // true\n```\n\n### Aseres Yimei Teshuva\n``` PHP\nZman::parse('September 21, 2017')->isAseresYimeiTeshuva(); // true\nZman::parse('September 22, 2017')->isAseresYimeiTeshuva(); // true\nZman::parse('September 23, 2017')->isAseresYimeiTeshuva(); // true\nZman::parse('September 24, 2017')->isAseresYimeiTeshuva(); // true\nZman::parse('September 25, 2017')->isAseresYimeiTeshuva(); // true\nZman::parse('September 26, 2017')->isAseresYimeiTeshuva(); // true\nZman::parse('September 27, 2017')->isAseresYimeiTeshuva(); // true\nZman::parse('September 28, 2017')->isAseresYimeiTeshuva(); // true\nZman::parse('September 29, 2017')->isAseresYimeiTeshuva(); // true\nZman::parse('September 30, 2017')->isAseresYimeiTeshuva(); // true\n\nZman::parse('October 23, 2017')->isAseresYimeiTeshuva();   // false\n```\n\n## Davening\n\nA few handy boolean checks have been implemented to check for special additions to <em>davening</em>.\n\n### Leining\n\n``` PHP\nZman::parse('November 7, 2016')->hasLeining();    // true - Monday\nZman::parse('November 10, 2016')->hasLeining();   // true - Thursday\nZman::parse('November 12, 2016')->hasLeining();   // true - Shabbos\nZman::parse('November 1, 2016')->hasLeining();    // true - Rosh Chodesh\nZman::parse('January 8, 2017')->hasLeining();     // true - Fast Day\nZman::parse('April 11, 2017')->hasLeining();      // true - Yuntif\nZman::parse('April 14, 2017')->hasLeining();      // true - Chol HaMoed\nZman::parse('December 27, 2016')->hasLeining();   // true - Chanuka\nZman::parse('March 12, 2017')->hasLeining();      // true - Purim\n\nZman::parse('November 6, 2016')->hasLeining();    // false - Average day\n```\n\n### Hallel\n\n``` PHP\nZman::parse('April 18, 2017')->hasHallel();       // true - Pesach\nZman::parse('June 1, 2017')->hasHallel();         // true - Shavuos\nZman::parse('October 23, 2016')->hasHallel();     // true - Sukkos\nZman::parse('October 24, 2016')->hasHallel();     // true - Shmini Atzeres\nZman::parse('October 25, 2016')->hasHallel();     // true - Simchas Torah\nZman::parse('January 1, 2017')->hasHallel();      // true - Chanuka\nZman::parse('November 1, 2016')->hasHallel();     // true - Rosh Chodesh\n\nZman::parse('March 12, 2017')->hasHallel();       // false - Purim\n```\n\n### Mussaf\n\n``` PHP\nZman::parse('November 1, 2016')->hasMussaf();    // true - Rosh Chodesh\nZman::parse('April 11, 2017')->hasMussaf();      // true - Yuntif\nZman::parse('April 13, 2017')->hasMussaf();      // true - Chol HaMoed\n\nZman::parse('December 20, 2017')->hasMussaf();   // false - Chanuka\n```\n\n### Slichos\n\nBesides for checking if a given day has <em>slichos</em>, the first day of <em>slichos</em> for both <em>ashkenazim</em> and <em>sfardim</em> before the <em>Yomim Noraim</em> is available via a helper method.\n\n``` PHP\nZman::firstDayOfSfardiSlichos('5776')->toFormattedDateString();     // Sep 4, 2016\nZman::firstDayOfAshkenaziSlichos('5776')->toFormattedDateString();  // Sep 25, 2016\n\nZman::firstDayOfSlichos('5777', true)->toFormattedDateString();     // Sep 4, 2016\nZman::firstDayOfSlichos('5777', false)->toFormattedDateString();    // Sep 25, 2016\n\nZman::parse('September 17, 2017')->hasSlichos();                    // true\nZman::parse('September 11, 2017')->hasSlichos(true);                // true\nZman::parse('September 11, 2017')->hasSlichos();                    // false\nZman::parse('December 11, 2017')->hasSlichos();                     // false\n```\n\n<p class=\"tip\">The default value for <em>slichos</em> is <em>ashkenazi</em>. To check for <em>sfardi</em> values pass `true` as a parameter.</p>\n\n## Zmanim (Coming Soon)\n\nComing Soon!\n","date":"2016-11-08T23:36:29.000Z","updated":"2016-11-08T23:36:29.000Z","path":"docs/index.html","title":"","comments":1,"layout":"page","_id":"civb0qohh0002arm1uq7mm0tq","content":"<h2 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h2><p><strong>Zman</strong> is a PHP package that makes Jewish date conversions simple and easy.</p>\n<p>The <code>Zman</code> class is inherited from the amazing <a href=\"https://github.com/briannesbitt/Carbon\" target=\"_blank\" rel=\"external\">briannesbitt/Carbon</a> which in turn inherits from PHP’s <a href=\"http://www.php.net/manual/en/class.datetime.php\" target=\"_blank\" rel=\"external\">DateTime</a> class, thus giving us access to some pretty nifty methods.</p>\n<h2 id=\"Getting-Started\"><a href=\"#Getting-Started\" class=\"headerlink\" title=\"Getting Started\"></a>Getting Started</h2><p>This is pre-release, so it is not available yet for installation. Check back soon iy”H.</p>\n<h2 id=\"Instantiation\"><a href=\"#Instantiation\" class=\"headerlink\" title=\"Instantiation\"></a>Instantiation</h2><p>There are four different ways to create a new instance of <code>Zman</code>.</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">$zman = <span class=\"keyword\">new</span> Zman(<span class=\"string\">'first day of November 2016'</span>);</div><div class=\"line\">$zman = <span class=\"keyword\">new</span> Zman(<span class=\"string\">'November 3, 2016'</span>);</div><div class=\"line\"></div><div class=\"line\">$zman = Zman::parse(<span class=\"string\">'first day of November 2016'</span>);</div><div class=\"line\">$zman = Zman::parse(<span class=\"string\">'November 3, 2016'</span>);</div><div class=\"line\"></div><div class=\"line\">$zman = Zman::createFromDate(<span class=\"number\">1967</span>, <span class=\"number\">10</span>, <span class=\"number\">6</span>);</div><div class=\"line\"></div><div class=\"line\">$zman = Zman::now();</div></pre></td></tr></table></figure>\n<h2 id=\"Getters\"><a href=\"#Getters\" class=\"headerlink\" title=\"Getters\"></a>Getters</h2><p>The following getters are implemented via PHP’s <em><code>__get()</code></em> method. This enables access to the value as if it was a property rather than a function call.</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">$zman = Carbon::parse(<span class=\"string\">'2012-9-5 23:26:11.123789'</span>);</div><div class=\"line\"></div><div class=\"line\">var_dump($zman-&gt;month);                           <span class=\"comment\">// int(13)</span></div><div class=\"line\">var_dump($zman-&gt;day);                             <span class=\"comment\">// int(18)</span></div><div class=\"line\">var_dump($zman-&gt;year);                            <span class=\"comment\">// int(5772)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// inherited from Carbon\\Carbon</span></div><div class=\"line\">var_dump($zman-&gt;hour);                            <span class=\"comment\">// int(23)</span></div><div class=\"line\">var_dump($zman-&gt;minute);                          <span class=\"comment\">// int(26)</span></div><div class=\"line\">var_dump($zman-&gt;second);                          <span class=\"comment\">// int(11)</span></div><div class=\"line\">var_dump($zman-&gt;micro);                           <span class=\"comment\">// int(123789)</span></div><div class=\"line\">var_dump($zman-&gt;dayOfWeek);                       <span class=\"comment\">// int(3)</span></div><div class=\"line\">var_dump($zman-&gt;dayOfYear);                       <span class=\"comment\">// int(248)</span></div><div class=\"line\">var_dump($zman-&gt;weekOfMonth);                     <span class=\"comment\">// int(1)</span></div><div class=\"line\">var_dump($zman-&gt;weekOfYear);                      <span class=\"comment\">// int(36)</span></div><div class=\"line\">var_dump($zman-&gt;daysInMonth);                     <span class=\"comment\">// int(30)</span></div><div class=\"line\">var_dump($zman-&gt;timestamp);                       <span class=\"comment\">// int(1346901971)</span></div><div class=\"line\">var_dump($zman-&gt;age);                             <span class=\"comment\">// int(4) calculated vs now in the same tz</span></div><div class=\"line\">var_dump($zman-&gt;quarter);                         <span class=\"comment\">// int(3)</span></div></pre></td></tr></table></figure>\n<p class=\"tip\">Note that only the <code>month</code>, <code>day</code>, and <code>year</code> getters will return the converted Jewish date. The other getters directly inherit from <code>Carbon\\Carbon</code> and reflect the Gregorian date.</p>\n\n<h2 id=\"Setters\"><a href=\"#Setters\" class=\"headerlink\" title=\"Setters\"></a>Setters</h2><p>The following setters are implemented via PHP’s <em><code>__set()</code></em> method. No validation is performed whatsoever so only use these methods if you’re sure you know what you’re doing.</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// day</span></div><div class=\"line\">$zman = Zman::parse(<span class=\"string\">'November 7, 2016'</span>);</div><div class=\"line\">var_dump($zman-&gt;day);                             <span class=\"comment\">// int(6)</span></div><div class=\"line\"></div><div class=\"line\">$zman-&gt;day = <span class=\"number\">10</span>;</div><div class=\"line\">var_dump($zman-&gt;day);                             <span class=\"comment\">// int(10)</span></div><div class=\"line\"></div><div class=\"line\">$zman-&gt;day(<span class=\"number\">14</span>);</div><div class=\"line\">var_dump($zman-&gt;day);                             <span class=\"comment\">// int(14)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// month</span></div><div class=\"line\">$zman = Zman::parse(<span class=\"string\">'November 7, 2016'</span>);</div><div class=\"line\">var_dump($zman-&gt;month);                           <span class=\"comment\">// int(2)</span></div><div class=\"line\"></div><div class=\"line\">$zman-&gt;month = <span class=\"number\">4</span>;</div><div class=\"line\">var_dump($zman-&gt;month);                           <span class=\"comment\">// int(4)</span></div><div class=\"line\"></div><div class=\"line\">$zman-&gt;month(<span class=\"number\">6</span>);</div><div class=\"line\">var_dump($zman-&gt;month);                           <span class=\"comment\">// int(6)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// year</span></div><div class=\"line\">$zman = Zman::parse(<span class=\"string\">'November 7, 2016'</span>);</div><div class=\"line\">var_dump($zman-&gt;year);                            <span class=\"comment\">// int(5777)</span></div><div class=\"line\"></div><div class=\"line\">$zman-&gt;year = <span class=\"number\">5000</span>;</div><div class=\"line\">var_dump($zman-&gt;year);                            <span class=\"comment\">// int(5000)</span></div><div class=\"line\"></div><div class=\"line\">$zman-&gt;year(<span class=\"number\">5050</span>);</div><div class=\"line\">var_dump($zman-&gt;year);                            <span class=\"comment\">// int(5050)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// etc.</span></div></pre></td></tr></table></figure>\n<p class=\"tip\">Note that only the <code>month</code>, <code>day</code>, and <code>year</code> setters will affect the converted Jewish date. The other setters directly inherit from <code>Carbon\\Carbon</code> and reflect the Gregorian date.</p>\n\n<h2 id=\"String-Formats\"><a href=\"#String-Formats\" class=\"headerlink\" title=\"String Formats\"></a>String Formats</h2><h2 id=\"Parshas-HaShavua-Coming-Soon\"><a href=\"#Parshas-HaShavua-Coming-Soon\" class=\"headerlink\" title=\"Parshas HaShavua (Coming Soon)\"></a>Parshas HaShavua (Coming Soon)</h2><p>Coming Soon!</p>\n<h2 id=\"Moadim\"><a href=\"#Moadim\" class=\"headerlink\" title=\"Moadim\"></a>Moadim</h2><p>There are convenience methods both for finding the Gregorian date of any holiday for a given year, as well as checking if a specific Gregorian date is any of the holidays.</p>\n<h3 id=\"Holidays\"><a href=\"#Holidays\" class=\"headerlink\" title=\"Holidays\"></a>Holidays</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">Zman::firstDayOfRoshHashana(<span class=\"string\">'5777'</span>)-&gt;toFormattedDateString(); <span class=\"comment\">// Oct 3, 2016</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'October 3, 2016'</span>)-&gt;isRoshHashana();              <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::dayOfYomKippur(<span class=\"string\">'5777'</span>)-&gt;toFormattedDateString();        <span class=\"comment\">// Oct 12, 2016</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'Oct 12, 2016'</span>)-&gt;isYomKippur();                   <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::firstDayOfSukkos(<span class=\"string\">'5777'</span>)-&gt;toFormattedDateString();      <span class=\"comment\">// Oct 17, 2016</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'Oct 17, 2016'</span>)-&gt;isSukkos();                      <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::dayOfShminiAtzeres(<span class=\"string\">'5777'</span>)-&gt;toFormattedDateString();    <span class=\"comment\">// Oct 24, 2016</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'Oct 24, 2016'</span>)-&gt;isShminiAtzeres();               <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::dayOfSimchasTorah(<span class=\"string\">'5777'</span>)-&gt;toFormattedDateString();     <span class=\"comment\">// Oct 25, 2016</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'Oct 25, 2016'</span>)-&gt;isSimchasTorah();                <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::firstDayOfChanuka(<span class=\"string\">'5777'</span>)-&gt;toFormattedDateString();     <span class=\"comment\">// Dec 25, 2016</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'Dec 25, 2016'</span>)-&gt;isChanuka();                     <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::dayOfTuBishvat(<span class=\"string\">'5777'</span>)-&gt;toFormattedDateString();        <span class=\"comment\">// Feb 11, 2017</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'Feb 11, 2017'</span>)-&gt;isTuBishvat();                   <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::dayOfPurim(<span class=\"string\">'5777'</span>)-&gt;toFormattedDateString();            <span class=\"comment\">// Mar 12, 2017</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'Mar 12, 2017'</span>)-&gt;isPurim();                       <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::dayOfShushanPurim(<span class=\"string\">'5777'</span>)-&gt;toFormattedDateString();     <span class=\"comment\">// Mar 13, 2017</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'March 13, 2017'</span>)-&gt;isShushanPurim();              <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::dayOfPurimKattan(<span class=\"string\">'5779'</span>)-&gt;toFormattedDateString();      <span class=\"comment\">// Feb 19, 2019</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'Feb 19, 2019'</span>)-&gt;isPurimKattan();                 <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::firstDayOfPesach(<span class=\"string\">'5777'</span>)-&gt;toFormattedDateString();      <span class=\"comment\">// Apr 11, 2017</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'Apr 11, 2017'</span>)-&gt;isPesach();                      <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::dayOfPesachSheni(<span class=\"string\">'5777'</span>)-&gt;toFormattedDateString();      <span class=\"comment\">// May 10, 2017</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'May 10, 2017'</span>)-&gt;isPesachSheni();                 <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::firstDayOfShavuos(<span class=\"string\">'5777'</span>)-&gt;toFormattedDateString();     <span class=\"comment\">// May 31, 2017</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'May 31, 2017'</span>)-&gt;isShavuos();                     <span class=\"comment\">// true</span></div></pre></td></tr></table></figure>\n<p>Leap years are taken care of so you don’t need to worry about it.</p>\n<p class=\"tip\">Outside of <em>Eretz Yisroel</em> is the default setting. To find the value specific to Israel pass <code>false</code> as the second parameter. (e.g. <code>Zman::dayOfSimchasTorah(&#39;5777&#39;, false)</code>)</p>\n\n<h3 id=\"Yuntif\"><a href=\"#Yuntif\" class=\"headerlink\" title=\"Yuntif\"></a>Yuntif</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">Zman::parse(<span class=\"string\">'April 11, 2017'</span>)-&gt;isPesachYuntif();      <span class=\"comment\">// true  - Pesach</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'April 13, 2017'</span>)-&gt;isPesachYuntif();      <span class=\"comment\">// false - Chol HaMoed</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'April 17, 2017'</span>)-&gt;isPesachYuntif();      <span class=\"comment\">// true  - Pesach</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'May 31, 2017'</span>)-&gt;isYuntif();              <span class=\"comment\">// true  - Shavuos</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'October 17, 2016'</span>)-&gt;isSukkosYuntif();    <span class=\"comment\">// true  - Sukkos</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'October 20, 2016'</span>)-&gt;isSukkosYuntif();    <span class=\"comment\">// false - Chol HaMoed</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'October 3, 2016'</span>)-&gt;isYuntif();           <span class=\"comment\">// true  - Rosh Hashana</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'December 17, 2017'</span>)-&gt;isYuntif();         <span class=\"comment\">// false - Chanuka</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// etc.</span></div></pre></td></tr></table></figure>\n<h3 id=\"Chol-Hamoed\"><a href=\"#Chol-Hamoed\" class=\"headerlink\" title=\"Chol Hamoed\"></a>Chol Hamoed</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">Zman::parse(<span class=\"string\">'April 13, 2017'</span>)-&gt;isCholHamoedPesach();    <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'October 19, 2016'</span>)-&gt;isCholHamoedSukkos();  <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'April 13, 2017'</span>)-&gt;isCholHamoed();          <span class=\"comment\">// true</span></div></pre></td></tr></table></figure>\n<h3 id=\"Rosh-Chodesh\"><a href=\"#Rosh-Chodesh\" class=\"headerlink\" title=\"Rosh Chodesh\"></a>Rosh Chodesh</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">Zman::parse(<span class=\"string\">'November 1, 2016'</span>)-&gt;isRoshChodesh();       <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'November 2, 2016'</span>)-&gt;isRoshChodesh();       <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'November 3, 2016'</span>)-&gt;isRoshChodesh();       <span class=\"comment\">// false</span></div></pre></td></tr></table></figure>\n<h3 id=\"Fast-Days\"><a href=\"#Fast-Days\" class=\"headerlink\" title=\"Fast Days\"></a>Fast Days</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">Zman::parse(<span class=\"string\">'October 12, 2016'</span>)-&gt;isYomKippur();         <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'October 5, 2016'</span>)-&gt;isTzomGedaliah();       <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'January 8, 2017'</span>)-&gt;isAsaraBiteives();      <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'February 28, 2018'</span>)-&gt;isTaanisEsther();     <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'July 11, 2017'</span>)-&gt;isShivaAsarBitamuz();     <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'August 1, 2017'</span>)-&gt;isTishaBav();            <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'October 5, 2016'</span>)-&gt;isFastDay());           <span class=\"comment\">// true</span></div></pre></td></tr></table></figure>\n<h3 id=\"Aseres-Yimei-Teshuva\"><a href=\"#Aseres-Yimei-Teshuva\" class=\"headerlink\" title=\"Aseres Yimei Teshuva\"></a>Aseres Yimei Teshuva</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">Zman::parse(<span class=\"string\">'September 21, 2017'</span>)-&gt;isAseresYimeiTeshuva(); <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'September 22, 2017'</span>)-&gt;isAseresYimeiTeshuva(); <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'September 23, 2017'</span>)-&gt;isAseresYimeiTeshuva(); <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'September 24, 2017'</span>)-&gt;isAseresYimeiTeshuva(); <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'September 25, 2017'</span>)-&gt;isAseresYimeiTeshuva(); <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'September 26, 2017'</span>)-&gt;isAseresYimeiTeshuva(); <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'September 27, 2017'</span>)-&gt;isAseresYimeiTeshuva(); <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'September 28, 2017'</span>)-&gt;isAseresYimeiTeshuva(); <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'September 29, 2017'</span>)-&gt;isAseresYimeiTeshuva(); <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'September 30, 2017'</span>)-&gt;isAseresYimeiTeshuva(); <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::parse(<span class=\"string\">'October 23, 2017'</span>)-&gt;isAseresYimeiTeshuva();   <span class=\"comment\">// false</span></div></pre></td></tr></table></figure>\n<h2 id=\"Davening\"><a href=\"#Davening\" class=\"headerlink\" title=\"Davening\"></a>Davening</h2><p>A few handy boolean checks have been implemented to check for special additions to <em>davening</em>.</p>\n<h3 id=\"Leining\"><a href=\"#Leining\" class=\"headerlink\" title=\"Leining\"></a>Leining</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">Zman::parse(<span class=\"string\">'November 7, 2016'</span>)-&gt;hasLeining();    <span class=\"comment\">// true - Monday</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'November 10, 2016'</span>)-&gt;hasLeining();   <span class=\"comment\">// true - Thursday</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'November 12, 2016'</span>)-&gt;hasLeining();   <span class=\"comment\">// true - Shabbos</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'November 1, 2016'</span>)-&gt;hasLeining();    <span class=\"comment\">// true - Rosh Chodesh</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'January 8, 2017'</span>)-&gt;hasLeining();     <span class=\"comment\">// true - Fast Day</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'April 11, 2017'</span>)-&gt;hasLeining();      <span class=\"comment\">// true - Yuntif</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'April 14, 2017'</span>)-&gt;hasLeining();      <span class=\"comment\">// true - Chol HaMoed</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'December 27, 2016'</span>)-&gt;hasLeining();   <span class=\"comment\">// true - Chanuka</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'March 12, 2017'</span>)-&gt;hasLeining();      <span class=\"comment\">// true - Purim</span></div><div class=\"line\"></div><div class=\"line\">Zman::parse(<span class=\"string\">'November 6, 2016'</span>)-&gt;hasLeining();    <span class=\"comment\">// false - Average day</span></div></pre></td></tr></table></figure>\n<h3 id=\"Hallel\"><a href=\"#Hallel\" class=\"headerlink\" title=\"Hallel\"></a>Hallel</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">Zman::parse(<span class=\"string\">'April 18, 2017'</span>)-&gt;hasHallel();       <span class=\"comment\">// true - Pesach</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'June 1, 2017'</span>)-&gt;hasHallel();         <span class=\"comment\">// true - Shavuos</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'October 23, 2016'</span>)-&gt;hasHallel();     <span class=\"comment\">// true - Sukkos</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'October 24, 2016'</span>)-&gt;hasHallel();     <span class=\"comment\">// true - Shmini Atzeres</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'October 25, 2016'</span>)-&gt;hasHallel();     <span class=\"comment\">// true - Simchas Torah</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'January 1, 2017'</span>)-&gt;hasHallel();      <span class=\"comment\">// true - Chanuka</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'November 1, 2016'</span>)-&gt;hasHallel();     <span class=\"comment\">// true - Rosh Chodesh</span></div><div class=\"line\"></div><div class=\"line\">Zman::parse(<span class=\"string\">'March 12, 2017'</span>)-&gt;hasHallel();       <span class=\"comment\">// false - Purim</span></div></pre></td></tr></table></figure>\n<h3 id=\"Mussaf\"><a href=\"#Mussaf\" class=\"headerlink\" title=\"Mussaf\"></a>Mussaf</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">Zman::parse(<span class=\"string\">'November 1, 2016'</span>)-&gt;hasMussaf();    <span class=\"comment\">// true - Rosh Chodesh</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'April 11, 2017'</span>)-&gt;hasMussaf();      <span class=\"comment\">// true - Yuntif</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'April 13, 2017'</span>)-&gt;hasMussaf();      <span class=\"comment\">// true - Chol HaMoed</span></div><div class=\"line\"></div><div class=\"line\">Zman::parse(<span class=\"string\">'December 20, 2017'</span>)-&gt;hasMussaf();   <span class=\"comment\">// false - Chanuka</span></div></pre></td></tr></table></figure>\n<h3 id=\"Slichos\"><a href=\"#Slichos\" class=\"headerlink\" title=\"Slichos\"></a>Slichos</h3><p>Besides for checking if a given day has <em>slichos</em>, the first day of <em>slichos</em> for both <em>ashkenazim</em> and <em>sfardim</em> before the <em>Yomim Noraim</em> is available via a helper method.</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">Zman::firstDayOfSfardiSlichos(<span class=\"string\">'5776'</span>)-&gt;toFormattedDateString();     <span class=\"comment\">// Sep 4, 2016</span></div><div class=\"line\">Zman::firstDayOfAshkenaziSlichos(<span class=\"string\">'5776'</span>)-&gt;toFormattedDateString();  <span class=\"comment\">// Sep 25, 2016</span></div><div class=\"line\"></div><div class=\"line\">Zman::firstDayOfSlichos(<span class=\"string\">'5777'</span>, <span class=\"keyword\">true</span>)-&gt;toFormattedDateString();     <span class=\"comment\">// Sep 4, 2016</span></div><div class=\"line\">Zman::firstDayOfSlichos(<span class=\"string\">'5777'</span>, <span class=\"keyword\">false</span>)-&gt;toFormattedDateString();    <span class=\"comment\">// Sep 25, 2016</span></div><div class=\"line\"></div><div class=\"line\">Zman::parse(<span class=\"string\">'September 17, 2017'</span>)-&gt;hasSlichos();                    <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'September 11, 2017'</span>)-&gt;hasSlichos(<span class=\"keyword\">true</span>);                <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'September 11, 2017'</span>)-&gt;hasSlichos();                    <span class=\"comment\">// false</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'December 11, 2017'</span>)-&gt;hasSlichos();                     <span class=\"comment\">// false</span></div></pre></td></tr></table></figure>\n<p class=\"tip\">The default value for <em>slichos</em> is <em>ashkenazi</em>. To check for <em>sfardi</em> values pass <code>true</code> as a parameter.</p>\n\n<h2 id=\"Zmanim-Coming-Soon\"><a href=\"#Zmanim-Coming-Soon\" class=\"headerlink\" title=\"Zmanim (Coming Soon)\"></a>Zmanim (Coming Soon)</h2><p>Coming Soon!</p>\n","excerpt":"","more":"<h2 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h2><p><strong>Zman</strong> is a PHP package that makes Jewish date conversions simple and easy.</p>\n<p>The <code>Zman</code> class is inherited from the amazing <a href=\"https://github.com/briannesbitt/Carbon\">briannesbitt/Carbon</a> which in turn inherits from PHP’s <a href=\"http://www.php.net/manual/en/class.datetime.php\">DateTime</a> class, thus giving us access to some pretty nifty methods.</p>\n<h2 id=\"Getting-Started\"><a href=\"#Getting-Started\" class=\"headerlink\" title=\"Getting Started\"></a>Getting Started</h2><p>This is pre-release, so it is not available yet for installation. Check back soon iy”H.</p>\n<h2 id=\"Instantiation\"><a href=\"#Instantiation\" class=\"headerlink\" title=\"Instantiation\"></a>Instantiation</h2><p>There are four different ways to create a new instance of <code>Zman</code>.</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">$zman = <span class=\"keyword\">new</span> Zman(<span class=\"string\">'first day of November 2016'</span>);</div><div class=\"line\">$zman = <span class=\"keyword\">new</span> Zman(<span class=\"string\">'November 3, 2016'</span>);</div><div class=\"line\"></div><div class=\"line\">$zman = Zman::parse(<span class=\"string\">'first day of November 2016'</span>);</div><div class=\"line\">$zman = Zman::parse(<span class=\"string\">'November 3, 2016'</span>);</div><div class=\"line\"></div><div class=\"line\">$zman = Zman::createFromDate(<span class=\"number\">1967</span>, <span class=\"number\">10</span>, <span class=\"number\">6</span>);</div><div class=\"line\"></div><div class=\"line\">$zman = Zman::now();</div></pre></td></tr></table></figure>\n<h2 id=\"Getters\"><a href=\"#Getters\" class=\"headerlink\" title=\"Getters\"></a>Getters</h2><p>The following getters are implemented via PHP’s <em><code>__get()</code></em> method. This enables access to the value as if it was a property rather than a function call.</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">$zman = Carbon::parse(<span class=\"string\">'2012-9-5 23:26:11.123789'</span>);</div><div class=\"line\"></div><div class=\"line\">var_dump($zman-&gt;month);                           <span class=\"comment\">// int(13)</span></div><div class=\"line\">var_dump($zman-&gt;day);                             <span class=\"comment\">// int(18)</span></div><div class=\"line\">var_dump($zman-&gt;year);                            <span class=\"comment\">// int(5772)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// inherited from Carbon\\Carbon</span></div><div class=\"line\">var_dump($zman-&gt;hour);                            <span class=\"comment\">// int(23)</span></div><div class=\"line\">var_dump($zman-&gt;minute);                          <span class=\"comment\">// int(26)</span></div><div class=\"line\">var_dump($zman-&gt;second);                          <span class=\"comment\">// int(11)</span></div><div class=\"line\">var_dump($zman-&gt;micro);                           <span class=\"comment\">// int(123789)</span></div><div class=\"line\">var_dump($zman-&gt;dayOfWeek);                       <span class=\"comment\">// int(3)</span></div><div class=\"line\">var_dump($zman-&gt;dayOfYear);                       <span class=\"comment\">// int(248)</span></div><div class=\"line\">var_dump($zman-&gt;weekOfMonth);                     <span class=\"comment\">// int(1)</span></div><div class=\"line\">var_dump($zman-&gt;weekOfYear);                      <span class=\"comment\">// int(36)</span></div><div class=\"line\">var_dump($zman-&gt;daysInMonth);                     <span class=\"comment\">// int(30)</span></div><div class=\"line\">var_dump($zman-&gt;timestamp);                       <span class=\"comment\">// int(1346901971)</span></div><div class=\"line\">var_dump($zman-&gt;age);                             <span class=\"comment\">// int(4) calculated vs now in the same tz</span></div><div class=\"line\">var_dump($zman-&gt;quarter);                         <span class=\"comment\">// int(3)</span></div></pre></td></tr></table></figure>\n<p class=\"tip\">Note that only the <code>month</code>, <code>day</code>, and <code>year</code> getters will return the converted Jewish date. The other getters directly inherit from <code>Carbon\\Carbon</code> and reflect the Gregorian date.</p>\n\n<h2 id=\"Setters\"><a href=\"#Setters\" class=\"headerlink\" title=\"Setters\"></a>Setters</h2><p>The following setters are implemented via PHP’s <em><code>__set()</code></em> method. No validation is performed whatsoever so only use these methods if you’re sure you know what you’re doing.</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// day</span></div><div class=\"line\">$zman = Zman::parse(<span class=\"string\">'November 7, 2016'</span>);</div><div class=\"line\">var_dump($zman-&gt;day);                             <span class=\"comment\">// int(6)</span></div><div class=\"line\"></div><div class=\"line\">$zman-&gt;day = <span class=\"number\">10</span>;</div><div class=\"line\">var_dump($zman-&gt;day);                             <span class=\"comment\">// int(10)</span></div><div class=\"line\"></div><div class=\"line\">$zman-&gt;day(<span class=\"number\">14</span>);</div><div class=\"line\">var_dump($zman-&gt;day);                             <span class=\"comment\">// int(14)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// month</span></div><div class=\"line\">$zman = Zman::parse(<span class=\"string\">'November 7, 2016'</span>);</div><div class=\"line\">var_dump($zman-&gt;month);                           <span class=\"comment\">// int(2)</span></div><div class=\"line\"></div><div class=\"line\">$zman-&gt;month = <span class=\"number\">4</span>;</div><div class=\"line\">var_dump($zman-&gt;month);                           <span class=\"comment\">// int(4)</span></div><div class=\"line\"></div><div class=\"line\">$zman-&gt;month(<span class=\"number\">6</span>);</div><div class=\"line\">var_dump($zman-&gt;month);                           <span class=\"comment\">// int(6)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// year</span></div><div class=\"line\">$zman = Zman::parse(<span class=\"string\">'November 7, 2016'</span>);</div><div class=\"line\">var_dump($zman-&gt;year);                            <span class=\"comment\">// int(5777)</span></div><div class=\"line\"></div><div class=\"line\">$zman-&gt;year = <span class=\"number\">5000</span>;</div><div class=\"line\">var_dump($zman-&gt;year);                            <span class=\"comment\">// int(5000)</span></div><div class=\"line\"></div><div class=\"line\">$zman-&gt;year(<span class=\"number\">5050</span>);</div><div class=\"line\">var_dump($zman-&gt;year);                            <span class=\"comment\">// int(5050)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// etc.</span></div></pre></td></tr></table></figure>\n<p class=\"tip\">Note that only the <code>month</code>, <code>day</code>, and <code>year</code> setters will affect the converted Jewish date. The other setters directly inherit from <code>Carbon\\Carbon</code> and reflect the Gregorian date.</p>\n\n<h2 id=\"String-Formats\"><a href=\"#String-Formats\" class=\"headerlink\" title=\"String Formats\"></a>String Formats</h2><h2 id=\"Parshas-HaShavua-Coming-Soon\"><a href=\"#Parshas-HaShavua-Coming-Soon\" class=\"headerlink\" title=\"Parshas HaShavua (Coming Soon)\"></a>Parshas HaShavua (Coming Soon)</h2><p>Coming Soon!</p>\n<h2 id=\"Moadim\"><a href=\"#Moadim\" class=\"headerlink\" title=\"Moadim\"></a>Moadim</h2><p>There are convenience methods both for finding the Gregorian date of any holiday for a given year, as well as checking if a specific Gregorian date is any of the holidays.</p>\n<h3 id=\"Holidays\"><a href=\"#Holidays\" class=\"headerlink\" title=\"Holidays\"></a>Holidays</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">Zman::firstDayOfRoshHashana(<span class=\"string\">'5777'</span>)-&gt;toFormattedDateString(); <span class=\"comment\">// Oct 3, 2016</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'October 3, 2016'</span>)-&gt;isRoshHashana();              <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::dayOfYomKippur(<span class=\"string\">'5777'</span>)-&gt;toFormattedDateString();        <span class=\"comment\">// Oct 12, 2016</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'Oct 12, 2016'</span>)-&gt;isYomKippur();                   <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::firstDayOfSukkos(<span class=\"string\">'5777'</span>)-&gt;toFormattedDateString();      <span class=\"comment\">// Oct 17, 2016</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'Oct 17, 2016'</span>)-&gt;isSukkos();                      <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::dayOfShminiAtzeres(<span class=\"string\">'5777'</span>)-&gt;toFormattedDateString();    <span class=\"comment\">// Oct 24, 2016</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'Oct 24, 2016'</span>)-&gt;isShminiAtzeres();               <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::dayOfSimchasTorah(<span class=\"string\">'5777'</span>)-&gt;toFormattedDateString();     <span class=\"comment\">// Oct 25, 2016</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'Oct 25, 2016'</span>)-&gt;isSimchasTorah();                <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::firstDayOfChanuka(<span class=\"string\">'5777'</span>)-&gt;toFormattedDateString();     <span class=\"comment\">// Dec 25, 2016</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'Dec 25, 2016'</span>)-&gt;isChanuka();                     <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::dayOfTuBishvat(<span class=\"string\">'5777'</span>)-&gt;toFormattedDateString();        <span class=\"comment\">// Feb 11, 2017</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'Feb 11, 2017'</span>)-&gt;isTuBishvat();                   <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::dayOfPurim(<span class=\"string\">'5777'</span>)-&gt;toFormattedDateString();            <span class=\"comment\">// Mar 12, 2017</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'Mar 12, 2017'</span>)-&gt;isPurim();                       <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::dayOfShushanPurim(<span class=\"string\">'5777'</span>)-&gt;toFormattedDateString();     <span class=\"comment\">// Mar 13, 2017</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'March 13, 2017'</span>)-&gt;isShushanPurim();              <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::dayOfPurimKattan(<span class=\"string\">'5779'</span>)-&gt;toFormattedDateString();      <span class=\"comment\">// Feb 19, 2019</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'Feb 19, 2019'</span>)-&gt;isPurimKattan();                 <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::firstDayOfPesach(<span class=\"string\">'5777'</span>)-&gt;toFormattedDateString();      <span class=\"comment\">// Apr 11, 2017</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'Apr 11, 2017'</span>)-&gt;isPesach();                      <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::dayOfPesachSheni(<span class=\"string\">'5777'</span>)-&gt;toFormattedDateString();      <span class=\"comment\">// May 10, 2017</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'May 10, 2017'</span>)-&gt;isPesachSheni();                 <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::firstDayOfShavuos(<span class=\"string\">'5777'</span>)-&gt;toFormattedDateString();     <span class=\"comment\">// May 31, 2017</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'May 31, 2017'</span>)-&gt;isShavuos();                     <span class=\"comment\">// true</span></div></pre></td></tr></table></figure>\n<p>Leap years are taken care of so you don’t need to worry about it.</p>\n<p class=\"tip\">Outside of <em>Eretz Yisroel</em> is the default setting. To find the value specific to Israel pass <code>false</code> as the second parameter. (e.g. <code>Zman::dayOfSimchasTorah(&#39;5777&#39;, false)</code>)</p>\n\n<h3 id=\"Yuntif\"><a href=\"#Yuntif\" class=\"headerlink\" title=\"Yuntif\"></a>Yuntif</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">Zman::parse(<span class=\"string\">'April 11, 2017'</span>)-&gt;isPesachYuntif();      <span class=\"comment\">// true  - Pesach</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'April 13, 2017'</span>)-&gt;isPesachYuntif();      <span class=\"comment\">// false - Chol HaMoed</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'April 17, 2017'</span>)-&gt;isPesachYuntif();      <span class=\"comment\">// true  - Pesach</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'May 31, 2017'</span>)-&gt;isYuntif();              <span class=\"comment\">// true  - Shavuos</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'October 17, 2016'</span>)-&gt;isSukkosYuntif();    <span class=\"comment\">// true  - Sukkos</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'October 20, 2016'</span>)-&gt;isSukkosYuntif();    <span class=\"comment\">// false - Chol HaMoed</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'October 3, 2016'</span>)-&gt;isYuntif();           <span class=\"comment\">// true  - Rosh Hashana</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'December 17, 2017'</span>)-&gt;isYuntif();         <span class=\"comment\">// false - Chanuka</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// etc.</span></div></pre></td></tr></table></figure>\n<h3 id=\"Chol-Hamoed\"><a href=\"#Chol-Hamoed\" class=\"headerlink\" title=\"Chol Hamoed\"></a>Chol Hamoed</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">Zman::parse(<span class=\"string\">'April 13, 2017'</span>)-&gt;isCholHamoedPesach();    <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'October 19, 2016'</span>)-&gt;isCholHamoedSukkos();  <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'April 13, 2017'</span>)-&gt;isCholHamoed();          <span class=\"comment\">// true</span></div></pre></td></tr></table></figure>\n<h3 id=\"Rosh-Chodesh\"><a href=\"#Rosh-Chodesh\" class=\"headerlink\" title=\"Rosh Chodesh\"></a>Rosh Chodesh</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">Zman::parse(<span class=\"string\">'November 1, 2016'</span>)-&gt;isRoshChodesh();       <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'November 2, 2016'</span>)-&gt;isRoshChodesh();       <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'November 3, 2016'</span>)-&gt;isRoshChodesh();       <span class=\"comment\">// false</span></div></pre></td></tr></table></figure>\n<h3 id=\"Fast-Days\"><a href=\"#Fast-Days\" class=\"headerlink\" title=\"Fast Days\"></a>Fast Days</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">Zman::parse(<span class=\"string\">'October 12, 2016'</span>)-&gt;isYomKippur();         <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'October 5, 2016'</span>)-&gt;isTzomGedaliah();       <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'January 8, 2017'</span>)-&gt;isAsaraBiteives();      <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'February 28, 2018'</span>)-&gt;isTaanisEsther();     <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'July 11, 2017'</span>)-&gt;isShivaAsarBitamuz();     <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'August 1, 2017'</span>)-&gt;isTishaBav();            <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'October 5, 2016'</span>)-&gt;isFastDay());           <span class=\"comment\">// true</span></div></pre></td></tr></table></figure>\n<h3 id=\"Aseres-Yimei-Teshuva\"><a href=\"#Aseres-Yimei-Teshuva\" class=\"headerlink\" title=\"Aseres Yimei Teshuva\"></a>Aseres Yimei Teshuva</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">Zman::parse(<span class=\"string\">'September 21, 2017'</span>)-&gt;isAseresYimeiTeshuva(); <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'September 22, 2017'</span>)-&gt;isAseresYimeiTeshuva(); <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'September 23, 2017'</span>)-&gt;isAseresYimeiTeshuva(); <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'September 24, 2017'</span>)-&gt;isAseresYimeiTeshuva(); <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'September 25, 2017'</span>)-&gt;isAseresYimeiTeshuva(); <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'September 26, 2017'</span>)-&gt;isAseresYimeiTeshuva(); <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'September 27, 2017'</span>)-&gt;isAseresYimeiTeshuva(); <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'September 28, 2017'</span>)-&gt;isAseresYimeiTeshuva(); <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'September 29, 2017'</span>)-&gt;isAseresYimeiTeshuva(); <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'September 30, 2017'</span>)-&gt;isAseresYimeiTeshuva(); <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">Zman::parse(<span class=\"string\">'October 23, 2017'</span>)-&gt;isAseresYimeiTeshuva();   <span class=\"comment\">// false</span></div></pre></td></tr></table></figure>\n<h2 id=\"Davening\"><a href=\"#Davening\" class=\"headerlink\" title=\"Davening\"></a>Davening</h2><p>A few handy boolean checks have been implemented to check for special additions to <em>davening</em>.</p>\n<h3 id=\"Leining\"><a href=\"#Leining\" class=\"headerlink\" title=\"Leining\"></a>Leining</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">Zman::parse(<span class=\"string\">'November 7, 2016'</span>)-&gt;hasLeining();    <span class=\"comment\">// true - Monday</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'November 10, 2016'</span>)-&gt;hasLeining();   <span class=\"comment\">// true - Thursday</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'November 12, 2016'</span>)-&gt;hasLeining();   <span class=\"comment\">// true - Shabbos</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'November 1, 2016'</span>)-&gt;hasLeining();    <span class=\"comment\">// true - Rosh Chodesh</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'January 8, 2017'</span>)-&gt;hasLeining();     <span class=\"comment\">// true - Fast Day</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'April 11, 2017'</span>)-&gt;hasLeining();      <span class=\"comment\">// true - Yuntif</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'April 14, 2017'</span>)-&gt;hasLeining();      <span class=\"comment\">// true - Chol HaMoed</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'December 27, 2016'</span>)-&gt;hasLeining();   <span class=\"comment\">// true - Chanuka</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'March 12, 2017'</span>)-&gt;hasLeining();      <span class=\"comment\">// true - Purim</span></div><div class=\"line\"></div><div class=\"line\">Zman::parse(<span class=\"string\">'November 6, 2016'</span>)-&gt;hasLeining();    <span class=\"comment\">// false - Average day</span></div></pre></td></tr></table></figure>\n<h3 id=\"Hallel\"><a href=\"#Hallel\" class=\"headerlink\" title=\"Hallel\"></a>Hallel</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">Zman::parse(<span class=\"string\">'April 18, 2017'</span>)-&gt;hasHallel();       <span class=\"comment\">// true - Pesach</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'June 1, 2017'</span>)-&gt;hasHallel();         <span class=\"comment\">// true - Shavuos</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'October 23, 2016'</span>)-&gt;hasHallel();     <span class=\"comment\">// true - Sukkos</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'October 24, 2016'</span>)-&gt;hasHallel();     <span class=\"comment\">// true - Shmini Atzeres</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'October 25, 2016'</span>)-&gt;hasHallel();     <span class=\"comment\">// true - Simchas Torah</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'January 1, 2017'</span>)-&gt;hasHallel();      <span class=\"comment\">// true - Chanuka</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'November 1, 2016'</span>)-&gt;hasHallel();     <span class=\"comment\">// true - Rosh Chodesh</span></div><div class=\"line\"></div><div class=\"line\">Zman::parse(<span class=\"string\">'March 12, 2017'</span>)-&gt;hasHallel();       <span class=\"comment\">// false - Purim</span></div></pre></td></tr></table></figure>\n<h3 id=\"Mussaf\"><a href=\"#Mussaf\" class=\"headerlink\" title=\"Mussaf\"></a>Mussaf</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">Zman::parse(<span class=\"string\">'November 1, 2016'</span>)-&gt;hasMussaf();    <span class=\"comment\">// true - Rosh Chodesh</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'April 11, 2017'</span>)-&gt;hasMussaf();      <span class=\"comment\">// true - Yuntif</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'April 13, 2017'</span>)-&gt;hasMussaf();      <span class=\"comment\">// true - Chol HaMoed</span></div><div class=\"line\"></div><div class=\"line\">Zman::parse(<span class=\"string\">'December 20, 2017'</span>)-&gt;hasMussaf();   <span class=\"comment\">// false - Chanuka</span></div></pre></td></tr></table></figure>\n<h3 id=\"Slichos\"><a href=\"#Slichos\" class=\"headerlink\" title=\"Slichos\"></a>Slichos</h3><p>Besides for checking if a given day has <em>slichos</em>, the first day of <em>slichos</em> for both <em>ashkenazim</em> and <em>sfardim</em> before the <em>Yomim Noraim</em> is available via a helper method.</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">Zman::firstDayOfSfardiSlichos(<span class=\"string\">'5776'</span>)-&gt;toFormattedDateString();     <span class=\"comment\">// Sep 4, 2016</span></div><div class=\"line\">Zman::firstDayOfAshkenaziSlichos(<span class=\"string\">'5776'</span>)-&gt;toFormattedDateString();  <span class=\"comment\">// Sep 25, 2016</span></div><div class=\"line\"></div><div class=\"line\">Zman::firstDayOfSlichos(<span class=\"string\">'5777'</span>, <span class=\"keyword\">true</span>)-&gt;toFormattedDateString();     <span class=\"comment\">// Sep 4, 2016</span></div><div class=\"line\">Zman::firstDayOfSlichos(<span class=\"string\">'5777'</span>, <span class=\"keyword\">false</span>)-&gt;toFormattedDateString();    <span class=\"comment\">// Sep 25, 2016</span></div><div class=\"line\"></div><div class=\"line\">Zman::parse(<span class=\"string\">'September 17, 2017'</span>)-&gt;hasSlichos();                    <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'September 11, 2017'</span>)-&gt;hasSlichos(<span class=\"keyword\">true</span>);                <span class=\"comment\">// true</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'September 11, 2017'</span>)-&gt;hasSlichos();                    <span class=\"comment\">// false</span></div><div class=\"line\">Zman::parse(<span class=\"string\">'December 11, 2017'</span>)-&gt;hasSlichos();                     <span class=\"comment\">// false</span></div></pre></td></tr></table></figure>\n<p class=\"tip\">The default value for <em>slichos</em> is <em>ashkenazi</em>. To check for <em>sfardi</em> values pass <code>true</code> as a parameter.</p>\n\n<h2 id=\"Zmanim-Coming-Soon\"><a href=\"#Zmanim-Coming-Soon\" class=\"headerlink\" title=\"Zmanim (Coming Soon)\"></a>Zmanim (Coming Soon)</h2><p>Coming Soon!</p>\n"}],"Post":[{"title":"Zman 1.0.0 Released","date":"2015-10-26T14:00:00.000Z","_content":"\n","source":"_posts/1.0.0-release.md","raw":"---\ntitle: Zman 1.0.0 Released\ndate: 2015-10-26 10:00:00\n---\n\n","slug":"1.0.0-release","published":1,"updated":"2016-11-07T22:23:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civb0qohd0001arm138cgmvg8","content":"","excerpt":"","more":""}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}